{
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "Collection",
    "type": "object",
    "properties": {
        "Name": {
            "type": "string",
            "description": "Identifier used for the collection, should not match any other identifier of a collection used in the same catalog."
        },
        "Title": {
            "type": "string",
            "description": "Title used to describe the collection"
        },
        "EodashIdentifier": {
            "type": "string",
            "description": "Identifier that will be used within the eodash client"
        },
        "Subtitle": {
            "type": "string"
        },
        "Description": {
            "anyOf": [
                {
                    "type": "string",
                    "format": "markdown"
                },
                {
                    "type": "string"
                }
            ],
            "description": "Can be either a text string (allowing markdown) or relative path (which root is taken from the `assets_endpoint` configured for the catalog) to a markdown file (with .md extension)"
        },
        "Themes": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "List of theme strings that represent the collection"
        },
        "Tags": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "List of tag strings that represent the collection"
        },
        "DataSource": {
            "$ref": "#/$defs/DataSource",
            "description": "defining sources of data"
        },
        "Agency": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "List of agency strings that represent the collection"
        },
        "License": {
            "anyOf": [
                {
                    "type": "string",
                    "description": "A string for the Collection's SPDX License identifier"
                },
                {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/License"
                    },
                    "description": "A list of custom License objects"
                }
            ],
            "description": "Either a string for the Collection's SPDX License identifier or if none apply a list of custom License objects"
        },
        "Locations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Locations"
            },
            "description": "List of `locations` of the collection"
        },
        "Provider": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Provider"
            },
            "description": "List of `providers` of the collection"
        },
        "Citation": {
            "$ref": "#/$defs/Citation",
            "description": "Citation object containing information on citation aspects of data"
        },
        "Image": {
            "type": "string",
            "description": "Relative path (which root is taken from the `assets_endpoint` configured for the catalog) to a preview image file"
        },
        "Legend": {
            "type": "string",
            "description": "Relative path (which root is taken from the `assets_endpoint` configured for the catalog) to colormap legend image file"
        },
        "Subcollections": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Subcollections"
            },
            "description": "List of Subcollections that are integrated into the defined collection. When used no <b> Resources </b> should be defined, thes Resources of the linked subcollections are used."
        },
        "Resources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Resource"
            },
            "description": "(REQUIRED if no <b> Subcollections </b> are specified) List of `resources` provided by the collection (typically will only be one resource)"
        },
        "Services": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Service"
            },
            "description": "List of `Service` objects provided by the collection (typically will only be one service)"
        },
        "References": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Reference"
            },
            "description": "List of `Reference` objects that further describe the collection"
        },
        "Colorlegend": {
            "$ref": "#/$defs/Colorlegend",
            "description": "Colorlegend object that describes how the colorlegend should be displayed"
        },
        "CollectionGroup": {
            "type": "string",
            "description": "(Optional) identifier that can be used to group collections/indicators in eodash using the `collection_group` property for grouping in the configuration"
        }
    },
    "required": [
        "Name",
        "Title",
        "EodashIdentifier",
        "Description",
        "Themes",
        "Tags",
        "DataSource",
        "Agency",
        "License",
        "Locations",
        "Provider",
        "Citation",
        "Image",
        "Legend"
    ],
    "oneOf": [
        {
            "required": [
                "Resources"
            ]
        },
        {
            "required": [
                "Subcollections"
            ]
        }
    ],
    "$defs": {
        "License": {
            "type": "object",
            "properties": {
                "Url": {
                    "type": "string",
                    "description": "**Required** Url to location where license text can be located"
                },
                "Type": {
                    "type": "string",
                    "default": "text/html",
                    "description": "[Media Type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types) string, defaults to `text/html` (for websites), other typical cases would be `application/pdf` for pdf documents"
                },
                "Title": {
                    "type": "string",
                    "description": "Descriptive title for the license"
                }
            },
            "required": [
                "Url"
            ]
        },
        "Citation": {
            "type": "object",
            "properties": {
                "DOI": {
                    "type": "string",
                    "description": "The DOI of the data, e.g. 10.1000/xyz123. This MUST NOT be a DOIs link"
                },
                "Citation": {
                    "type": "string",
                    "description": "The recommended human-readable reference (citation) to be used by publications citing the data"
                },
                "Publications": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "DOI": {
                                "type": "string",
                                "description": "The DOI of a publication referencing the data. This MUST NOT be a DOIs link."
                            },
                            "Citation": {
                                "type": "string",
                                "description": "Citation of a publication referencing the data."
                            }
                        },
                        "required": [
                            "DOI",
                            "Citation"
                        ]
                    }
                }
            },
            "required": [
                "Citation",
                "DOI"
            ]
        },
        "Provider": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "The name of the organization or the individual."
                },
                "Description": {
                    "type": "string",
                    "description": "Description of the provider. Markdown may be used for rich text representation."
                },
                "Roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles of the provider. Any of licensor, producer, processor or host"
                },
                "Url": {
                    "type": "string",
                    "description": "Homepage on which the provider describes the dataset and publishes contact information."
                }
            },
            "required": [
                "Name",
                "Url"
            ]
        },
        "Locations": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Times": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Country": {
                    "type": [
                        "string",
                        "array"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "Point": {
                    "$ref": "#/$defs/Point"
                },
                "Bbox": {
                    "$ref": "#/$defs/Bbox"
                }
            }
        },
        "Subcollections": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Collection": {
                    "type": "string"
                },
                "Country": {
                    "type": [
                        "string",
                        "array"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "Point": {
                    "$ref": "#/$defs/Point"
                },
                "Bbox": {
                    "$ref": "#/$defs/Bbox"
                }
            }
        },
        "Resource": {
            "anyOf": [
                {
                    "$ref": "#/$defs/SentinelHubResource"
                },
                {
                    "$ref": "#/$defs/SentinelHubWMSResource"
                },
                {
                    "$ref": "#/$defs/GeoDBResource"
                },
                {
                    "$ref": "#/$defs/GeoDBVectorTileResource"
                },
                {
                    "$ref": "#/$defs/WMSResource"
                },
                {
                    "$ref": "#/$defs/VEDAResource"
                },
                {
                    "$ref": "#/$defs/XCubeServerResource"
                },
                {
                    "$ref": "#/$defs/CopernicusMarineDataStoreWMTSResource"
                },
                {
                    "$ref": "#/$defs/RasdamanWCSResource"
                },
                {
                    "$ref": "#/$defs/RawSourceResource"
                }
            ]
        },
        "Service": {
            "anyOf": [
            {
                "$ref": "#/$defs/StatisticalAPIService"
            },
            {
                "$ref": "#/$defs/VEDAStatisticsService"
            },
            {
                "$ref": "#/$defs/EOxHubNotebookService"
            }
            ],
            "description": "Service provided by the collection"
        },
        "StatisticalAPIService": {
            "type": "object",
            "properties": {
            "Name": {
                "type": "string",
                "const": "Statistical API"
            },
            "EndPoint": {
                "type": "string",
                "description": "Url to endpoint, usually `https://services.sentinel-hub.com/api/v1/statistics`"
            },
            "Type": {
                "type": "string",
                "enum": [
                "byoc",
                "zarr"
                ]
            },
            "CollectionId": {
                "type": "string",
                "description": "Identifier of the data collection of SH"
            },
            "Script": {
                "type": "string",
                "description": "Relative path (which root is taken from the <b>assets_endpoint</b> configured for the catalog) to a javascript evalscript"
            }
            
        },
            "required": [
            "Name",
            "EndPoint",
            "Type",
            "CollectionId",
            "Script"
            ]
        },
        "VEDAStatisticsService": {
            "type": "object",
            "properties": {
            "Name": {
                "type": "string",
                "const": "VEDA Statistics"
            },
            "EndPoint": {
                "type": "string",
                "description": "Url to endpoint, usually `https://services.sentinel-hub.com/api/v1/statistics`"
            }
            },
            "required": [
            "Name",
            "EndPoint"
            ]
        },
        "EOxHubNotebookService": {
            "type": "object",
            "properties": {
            "Name": {
                "type": "string",
                "const": "EOxHub Notebook"
            },
            "Title": {
                "type": "string",
                "description": "Descriptive title for the referenced algorithm"
            },
            "Url": {
                "type": "string",
                "description": "Url to notebook preview"
            }
            },
            "required": [
            "Name",
            "Title",
            "Url"
            ]
        },
        "Reference": {
            "type": "object",
            "properties": {
                "Url": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                }
            },
            "required": [
                "Url",
                "Title"
            ]
        },
        "Colorlegend": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Text added to legend as title"
                },
                "range": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of hex colors strings which will be interpolated or used for categories"
                },
                "domain": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "description": "List of domain entries, usually minimum and maximum value of domain, list of strings when using `categorical` `scaletype`"
                },
                "tickFormat": {
                    "type": "string",
                    "description": "Expression of how numbers should be formatted, e.g. \".0f\""
                },
                "tickValues": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "description": "List of numbers for which tick values should be shown"
                },
                "scaletype": {
                    "type": "string",
                    "enum": [
                        "continuous",
                        "discrete",
                        "threshold",
                        "categorical"
                    ],
                    "description": "Can be `continuous`, `discrete`, `threshold`, `categorical`"
                },
                "marktype": {
                    "type": "string",
                    "enum": [
                        "rect",
                        "circle",
                        "line"
                    ],
                    "description": "When using \"categorical\" type allows to define symbol to be used"
                }
            }
        },
        "DataSource": {
            "type": "object",
            "properties": {
                "Spaceborne": {
                    "$ref": "#/$defs/Spaceborne",
                    "description": "Information if the source is spaceborn."
                },
                "InSitu": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of in situ data sources."
                },
                "Other": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of other data sources that are not covered by spaceborn or in situ."
                }
            }
        },
        "Spaceborne": {
            "type": "object",
            "properties": {
                "Satellite": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of satellite identifiers that produced the data."
                },
                "Sensor": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of sensors (on the satellite) that produced the data."
                }
            }
        },
        "Bbox": {
            "type": "array",
            "format": "bounding-box"
        },
        "Point": {
            "type": "array",
            "format": "point"
        },
        "SentinelHubResource": {
            "type": "object",
            "properties": {
                "EndPoint": {
                    "type": "string"
                },
                "Name": {
                    "type": "string",
                    "const": "Sentinel Hub"
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "byoc",
                        "zarr"
                    ]
                },
                "CollectionId": {
                    "type": "string"
                },
                "LayerId": {
                    "type": "string"
                },
                "Attribution": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "EndPoint",
                "Type",
                "CollectionId",
                "LayerId"
            ]
        },
        "SentinelHubWMSResource": {
            "type": "object",
            "properties": {
                "EndPoint": {
                    "type": "string"
                },
                "Name": {
                    "type": "string",
                    "const": "Sentinel Hub WMS"
                },
                "CollectionId": {
                    "type": "string"
                },
                "LayerId": {
                    "type": "string"
                },
                "Attribution": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "EndPoint",
                "CollectionId",
                "LayerId"
            ]
        },
        "GeoDBResource": {
            "type": "object",
            "properties": {
                "EndPoint": {
                    "type": "string"
                },
                "Name": {
                    "type": "string",
                    "const": "GeoDB"
                },
                "Database": {
                    "type": "string"
                },
                "CollectionId": {
                    "type": "string"
                },
                "AdditionalQueryString": {
                    "type": "string"
                },
                "IdKey": {
                    "type": "string"
                },
                "Attribution": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "EndPoint",
                "Database",
                "CollectionId"
            ]
        },
        "GeoDBVectorTileResource": {
            "type": "object",
            "properties": {
                "EndPoint": {
                    "type": "string"
                },
                "Name": {
                    "type": "string",
                    "const": "GeoDB Vector Tiles"
                },
                "DBEndpoint": {
                    "type": "string"
                },
                "Source": {
                    "type": "string"
                },
                "Instance": {
                    "type": "string"
                },
                "Database": {
                    "type": "string"
                },
                "CollectionId": {
                    "type": "string"
                },
                "TimeKey": {
                    "type": "string"
                },
                "MatchKey": {
                    "type": "string"
                },
                "Parameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Attribution": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "EndPoint",
                "DBEndpoint",
                "Source",
                "Instance",
                "Database",
                "CollectionId",
                "TimeKey",
                "MatchKey",
                "Parameters"
            ]
        },
        "WMSResource": {
            "type": "object",
            "properties": {
                "EndPoint": {
                    "type": "string"
                },
                "Name": {
                    "type": "string",
                    "const": "WMS"
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "Time"
                    ]
                },
                "LayerId": {
                    "type": "string"
                },
                "Styles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Version": {
                    "type": "string",
                    "enum": [
                        "1.1.0",
                        "1.3.0"
                    ]
                },
                "TileSize": {
                    "type": "number"
                },
                "Attribution": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "EndPoint",
                "LayerId"
            ]
        },
        "VEDAResource": {
            "type": "object",
            "properties": {
                "EndPoint": {
                    "type": "string"
                },
                "Name": {
                    "type": "string",
                    "const": "VEDA"
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "tiles",
                        "cog"
                    ]
                },
                "CollectionId": {
                    "type": "string"
                },
                "ColormapName": {
                    "type": "string",
                    "enum": [
                        "accent",
                        "accent_r",
                        "afmhot",
                        "afmhot_r",
                        "autumn",
                        "autumn_r",
                        "binary",
                        "binary_r",
                        "blues",
                        "blues_r",
                        "bone",
                        "bone_r",
                        "brbg",
                        "brbg_r",
                        "brg",
                        "brg_r",
                        "bugn",
                        "bugn_r",
                        "bupu",
                        "bupu_r",
                        "bwr",
                        "bwr_r",
                        "cfastie",
                        "cividis",
                        "cividis_r",
                        "cmrmap",
                        "cmrmap_r",
                        "cool",
                        "cool_r",
                        "coolwarm",
                        "coolwarm_r",
                        "copper",
                        "copper_r",
                        "cubehelix",
                        "cubehelix_r",
                        "dark2",
                        "dark2_r",
                        "flag",
                        "flag_r",
                        "gist_earth",
                        "gist_earth_r",
                        "gist_gray",
                        "gist_gray_r",
                        "gist_heat",
                        "gist_heat_r",
                        "gist_ncar",
                        "gist_ncar_r",
                        "gist_rainbow",
                        "gist_rainbow_r",
                        "gist_stern",
                        "gist_stern_r",
                        "gist_yarg",
                        "gist_yarg_r",
                        "gnbu",
                        "gnbu_r",
                        "gnuplot",
                        "gnuplot2",
                        "gnuplot2_r",
                        "gnuplot_r",
                        "gray",
                        "gray_r",
                        "greens",
                        "greens_r",
                        "greys",
                        "greys_r",
                        "hot",
                        "hot_r",
                        "hsv",
                        "hsv_r",
                        "inferno",
                        "inferno_r",
                        "jet",
                        "jet_r",
                        "magma",
                        "magma_r",
                        "nipy_spectral",
                        "nipy_spectral_r",
                        "ocean",
                        "ocean_r",
                        "oranges",
                        "oranges_r",
                        "orrd",
                        "orrd_r",
                        "paired",
                        "paired_r",
                        "pastel1",
                        "pastel1_r",
                        "pastel2",
                        "pastel2_r",
                        "pink",
                        "pink_r",
                        "piyg",
                        "piyg_r",
                        "plasma",
                        "plasma_r",
                        "prgn",
                        "prgn_r",
                        "prism",
                        "prism_r",
                        "pubu",
                        "pubu_r",
                        "pubugn",
                        "pubugn_r",
                        "puor",
                        "puor_r",
                        "purd",
                        "purd_r",
                        "purples",
                        "purples_r",
                        "rainbow",
                        "rainbow_r",
                        "rdbu",
                        "rdbu_r",
                        "rdgy",
                        "rdgy_r",
                        "rdpu",
                        "rdpu_r",
                        "rdylbu",
                        "rdylbu_r",
                        "rdylgn",
                        "rdylgn_r",
                        "reds",
                        "reds_r",
                        "rplumbo",
                        "schwarzwald",
                        "seismic",
                        "seismic_r",
                        "set1",
                        "set1_r",
                        "set2",
                        "set2_r",
                        "set3",
                        "set3_r",
                        "spectral",
                        "spectral_r",
                        "spring",
                        "spring_r",
                        "summer",
                        "summer_r",
                        "tab10",
                        "tab10_r",
                        "tab20",
                        "tab20_r",
                        "tab20b",
                        "tab20b_r",
                        "tab20c",
                        "tab20c_r",
                        "terrain",
                        "terrain_r",
                        "twilight",
                        "twilight_r",
                        "twilight_shifted",
                        "twilight_shifted_r",
                        "viridis",
                        "viridis_r",
                        "winter",
                        "winter_r",
                        "wistia",
                        "wistia_r",
                        "ylgn",
                        "ylgn_r",
                        "ylgnbu",
                        "ylgnbu_r",
                        "ylorbr",
                        "ylorbr_r",
                        "ylorrd",
                        "ylorrd_r"
                    ]
                },
                "Rescale": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 2
                },
                "Bidx": {
                    "type": "integer"
                },
                "Assets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ColorFormula": {
                    "type": "string"
                },
                "Attribution": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "EndPoint",
                "Type",
                "CollectionId"
            ],
            "dependencies": {
                "Type": {
                    "oneOf": [
                        {
                            "properties": {
                                "Type": {
                                    "const": "tiles"
                                },
                                "Assets": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "ColorFormula": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Assets",
                                "ColorFormula"
                            ]
                        },
                        {
                            "properties": {
                                "Type": {
                                    "const": "cog"
                                },
                                "Bidx": {
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "Bidx"
                            ]
                        }
                    ]
                }
            }
        },
        "XCubeServerResource": {
            "type": "object",
            "properties": {
                "EndPoint": {
                    "type": "string"
                },
                "Name": {
                    "type": "string",
                    "const": "XCube Server"
                },
                "Type": {
                    "type": "string",
                    "const": "zarr"
                },
                "StacEndpoint": {
                    "type": "string"
                },
                "DatacubeId": {
                    "type": "string"
                },
                "Variable": {
                    "type": "string"
                },
                "ColormapName": {
                    "type": "string"
                },
                "Rescale": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 2
                },
                "Attribution": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "EndPoint",
                "Type",
                "StacEndpoint",
                "DatacubeId",
                "Variable"
            ]
        },
        "CopernicusMarineDataStoreWMTSResource": {
            "type": "object",
            "properties": {
                "EndPoint": {
                    "type": "string"
                },
                "Name": {
                    "type": "string",
                    "const": "Copernicus Marine Data Store WMTS"
                },
                "Type": {
                    "type": "string",
                    "const": "WMTSCapabilities"
                },
                "LayerId": {
                    "type": "string"
                },
                "Variable": {
                    "type": "string"
                },
                "Dimensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "Query": {
                    "type": "object",
                    "properties": {
                        "Start": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "End": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                },
                "Attribution": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "EndPoint",
                "Type",
                "LayerId",
                "Variable",
                "Dimensions"
            ]
        },
        "RasdamanWCSResource": {
            "type": "object",
            "properties": {
                "EndPoint": {
                    "type": "string"
                },
                "Name": {
                    "type": "string",
                    "const": "rasdaman"
                },
                "CoverageId": {
                    "type": "string"
                },
                "Attribution": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "EndPoint",
                "CoverageId"
            ]
        },
        "RawSourceResource": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string",
                    "enum": [
                        "COG source",
                        "GeoJSON source",
                        "FlatGeobuf source"
                    ]
                },
                "Style": {
                    "type": "string"
                },
                "BBox": {
                    "$ref": "#/$defs/Bbox"
                },
                "TimeEntries": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "Time": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "Assets": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "Identifier": {
                                            "type": "string"
                                        },
                                        "File": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "Identifier",
                                        "File"
                                    ]
                                }
                            },
                            "Attribution": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Time",
                            "Assets"
                        ]
                    }
                },
                "Attribution": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "Style",
                "BBox",
                "TimeEntries"
            ]
        }
    }
}